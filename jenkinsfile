pipeline {
    agent any
    
    tools {
        maven "maven"
    }
    
    parameters {
		booleanParam(defaultValue: false, description: 'build and upload to artifact repository', name: 'build')
		booleanParam(defaultValue: false, description: 'Deploying to application server', name: 'deploy')
		gitParameter(branch: '', branchFilter: '.*', defaultValue: '/master', description: 'Select the branch', name: 'GIT_BRANCH', quickFilterEnabled: true, selectedValue: 'NONE', sortMode: 'NONE', tagFilter: '*', type: 'PT_BRANCH')
		
    }	

    stages {
        stage('scm -checkout') {
            steps {
                git 'https://github.com/Chandandhani/loginapp.git'    
            }
        }
        stage("Maven goals"){
            when {
               expression {params.build} 
            }
            steps{
                sh "mvn clean install package"
            }
        }
        stage("Deploying to tomcat"){
            when {
              expression {params.deploy}
           }
           steps{
                
                sshPublisher(publishers: [sshPublisherDesc(configName: '172.31.70.153', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: '', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: 'opt/tomcatt/webapps', remoteDirectorySDF: false, removePrefix: 'target', sourceFiles: '**/*.war')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])
           }
        }
        stage("Killing process"){
            steps{
                sshPublisher(publishers: [sshPublisherDesc(configName: '172.31.70.153', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: 'ps -ef | grep /opt/tomcatt | grep -v grep  | awk \'{print $2}\' | xargs kill -9 $2', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '', remoteDirectorySDF: false, removePrefix: '', sourceFiles: '')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])
            }
        }
        
        stage("GettingUp"){
            steps{
                sshPublisher(publishers: [sshPublisherDesc(configName: '172.31.70.153', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: '''cd /opt/tomcatt/bin
./startup.sh''', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '', remoteDirectorySDF: false, removePrefix: '', sourceFiles: '')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])
            }
        }
    }
}
